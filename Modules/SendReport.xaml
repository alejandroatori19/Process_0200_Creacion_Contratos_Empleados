<Activity mc:Ignorable="sap sap2010" x:Class="SendReport" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mg="clr-namespace:Microsoft.Graph;assembly=Microsoft.Graph" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugage="clr-namespace:UiPath.GSuite.Activities.Gmail.Enums;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:upr="clr-namespace:UiPath.Platform.ResourceHandling;assembly=UiPath.Platform" xmlns:usau="clr-namespace:UiPath.Shared.Activities.Utils;assembly=UiPath.GSuite.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_bool_ExisteBD" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_config" Type="InArgument(scg:Dictionary(x:String, scg:Dictionary(x:String, x:String)))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>816,10381</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>SendReport_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>CoE_MicrosoftOffice365_Activities.Excel</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Net</x:String>
      <x:String>CoE_Utilities_Activities</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel.Enums</x:String>
      <x:String>CoE_MicrosoftOffice365_Activities.Outlook</x:String>
      <x:String>UiPath.Activities.System.Arrays</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Mail</x:String>
      <x:String>CoE_MicrosoftOffice365_Activities.SharePoint.Files</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.GSuite.Activities.Gmail.Enums</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.Platform</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>CoE MicrosoftOffice365 Activities</AssemblyReference>
      <AssemblyReference>CoE MicrosoftOffice365 Activities.ViewModels</AssemblyReference>
      <AssemblyReference>CoE Utilities Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.HttpListener</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Net.NameResolution</AssemblyReference>
      <AssemblyReference>System.Net.Primitives</AssemblyReference>
      <AssemblyReference>System.Net.Requests</AssemblyReference>
      <AssemblyReference>System.Net.ServicePoint</AssemblyReference>
      <AssemblyReference>System.Net.WebClient</AssemblyReference>
      <AssemblyReference>System.Net.WebHeaderCollection</AssemblyReference>
      <AssemblyReference>System.Net.WebProxy</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>NPOI.Core</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.CodedWorkflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="** IMPORTANT **&#xA;&#xA;If Config parameter 'sendReportToBusiness' is False, TransactionItems will not be reported&#xA;&#xA;For all defined queues, it will check if exist 'TransactionItems' with 'New' or 'Pending' status&#xA;If all the TransactionItems have been processed, it will create the report and send it to Business" DisplayName="Secuencia - Send Report" sap:VirtualizedContainerService.HintSize="1073.2,8886.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="bool_sendReport" />
      <Variable x:TypeArguments="x:String" Default="[in_config(&quot;Settings&quot;)(&quot;datatableNombre&quot;).ToString]" Name="vStr_NombreTablaBD" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - Init WorkFlow - Send Report" sap:VirtualizedContainerService.HintSize="611.2,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Iniciamos WorkFlow 'Send Report'&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
    <Assign DisplayName="Assign - Control Variable" sap:VirtualizedContainerService.HintSize="611.2,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[bool_sendReport]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[String.IsNullOrEmpty(in_config(&quot;SendReport&quot;)(&quot;ValidadorCola&quot;).ToString)]" DisplayName="If - Queue Validator" sap:VirtualizedContainerService.HintSize="611.2,1616" sap2010:WorkflowViewState.IdRef="If_6">
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="537.6,164.8" sap2010:WorkflowViewState.IdRef="Sequence_14">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Assign - Control Variable" sap:VirtualizedContainerService.HintSize="504,104.8" sap2010:WorkflowViewState.IdRef="Assign_17">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Boolean">[bool_sendReport]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="537.6,1312.8" sap2010:WorkflowViewState.IdRef="Sequence_15">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Obtener información sobre TransactionItems para cada cola" DisplayName="For Each - Queue" sap:VirtualizedContainerService.HintSize="504,1252.8" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[Split(in_Config(&quot;SendReport&quot;)(&quot;ValidadorCola&quot;).ToString,&quot;,&quot;)]">
            <ui:ForEach.Body>
              <ActivityAction x:TypeArguments="x:String">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="x:String" Name="Queue" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="502.4,1100" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="queueItems" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:GetQueueItems Duration="{x:Null}" From="{x:Null}" Priority="{x:Null}" Reference="{x:Null}" Skip="{x:Null}" TimeoutMS="{x:Null}" To="{x:Null}" Top="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="Equals" FolderPath="[in_config(&quot;Settings&quot;)(&quot;RutaCarpetaOrquestador&quot;).ToString]" sap:VirtualizedContainerService.HintSize="468.8,175.2" sap2010:WorkflowViewState.IdRef="GetQueueItems_1" QueueItemStates="New, InProgress" QueueName="[Queue]" Result="[queueItems]">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:GetQueueItems>
                  <If Condition="[queueItems.Count&gt;0]" DisplayName="If - QueueItems" sap:VirtualizedContainerService.HintSize="468.8,864.8" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="467.2,396" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;El correo electrónico de informe no se enviará porque la cola '&quot;+Queue+&quot;' Contiene TransactionItems con Estado 'New' o 'InProgress'. Número total de elementos de transacción con estado 'New' o 'InProgress': &quot;+queueItems.Count.ToString]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <Assign DisplayName="Assign - Variable Control" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bool_sendReport]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:Break DisplayName="Break - Queue Items" sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_1" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="467.2,339.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="433.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Queue '&quot;+Queue+&quot;' no contiene TransactionItems con Estado 'New' o 'InProgress'&quot;]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:LogMessage>
                        <Assign DisplayName="Assign - Variable Control" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">[bool_sendReport]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </ActivityAction>
            </ui:ForEach.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ForEach>
        </Sequence>
      </If.Else>
    </If>
    <If Condition="[bool_sendReport]" DisplayName="If - Send Report" sap:VirtualizedContainerService.HintSize="611.2,6716" sap2010:WorkflowViewState.IdRef="If_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="609.6,6488" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <Sequence.Variables>
            <Variable x:TypeArguments="mg:DriveItem" Name="driveItem_workBook" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_report" />
            <Variable x:TypeArguments="sd:DataTable" Name="dt_reportSQL" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="576,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_9" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Comprobando si hay filas en SQL para informar&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" ConnectionString="[&quot;Provider=Microsoft.ACE.OLEDB.12.0;Data Source=&quot; + in_config(&quot;Settings&quot;)(&quot;RutaProceso&quot;).ToString + in_config(&quot;Settings&quot;)(&quot;basedatosNombre&quot;).ToString + &quot;.accdb&quot;]" DataTable="[dt_reportSQL]" DisplayName="Run Query" sap:VirtualizedContainerService.HintSize="576,147.2" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" ProviderName="System.Data.OleDb" Sql="[&quot;SELECT Id, CodigoEtapa, ItemReference, ParametersDic, StartProcessingItemTime, &quot; &amp; _&#xA;                    &quot;EndProcessingItemTime, ProcessingItemStatus, ProcessingItemRemarks, SentReport &quot; &amp; _&#xA;                    &quot;FROM [&quot; &amp; vStr_NombreTablaBD &amp; &quot;] &quot; &amp; _&#xA;                    &quot;WHERE SentReport = '0';&quot;]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <If sap2010:Annotation.AnnotationText="Comprueba si hay elementos de transacción para informar" Condition="[dt_reportSQL.RowCount&gt;0]" DisplayName="If - TransactionItems" sap:VirtualizedContainerService.HintSize="576,6106.4" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="574.4,5720" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="str_systemExceptionRate" />
                  <Variable x:TypeArguments="x:String" Name="str_businessExceptionRate" />
                  <Variable x:TypeArguments="x:String" Name="str_successRate" />
                  <Variable x:TypeArguments="x:Int32" Name="int_systemException" />
                  <Variable x:TypeArguments="x:Int32" Name="int_businessException" />
                  <Variable x:TypeArguments="x:Int32" Name="int_success" />
                  <Variable x:TypeArguments="x:String" Name="Json_ParametersDic" />
                  <Variable x:TypeArguments="x:String" Name="rutaInforme" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="540.8,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[If(dt_reportSQL.RowCount=1,&quot;Hay 1 fila para informar&quot;,&quot;Hay &quot;+dt_reportSQL.RowCount.ToString+&quot; filas para informar&quot;)+&quot;. Creando archivo de informe&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:RetryScope LogRetriedExceptions="{x:Null}" RetriedExceptionsLogLevel="{x:Null}" DisplayName="Retry Scope - Create Excel File" sap:VirtualizedContainerService.HintSize="540.8,56.8" sap2010:WorkflowViewState.IdRef="RetryScope_5" NumberOfRetries="3" RetryInterval="00:00:05">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="486,278" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="450,199" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" DataTable="[dt_reportSQL]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="416,139" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Hoja Reporte" WorkbookPath="[in_config(&quot;SendReport&quot;)(&quot;DirectorioArchivoMonitorizacion&quot;).ToString + Now.ToString(&quot;yyyyMMdd_HHmmss_&quot;) + in_config(&quot;SendReport&quot;)(&quot;NombreExcel&quot;).ToString + &quot;.xlsx&quot;]" />
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RetryScope>
                <Sequence DisplayName="Sequence - Create Report DataTable" sap:VirtualizedContainerService.HintSize="540.8,832.8" sap2010:WorkflowViewState.IdRef="Sequence_17">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - Create DataTable" sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="sd:DataTable">[dt_report]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="sd:DataTable">[New System.Data.DataTable]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - Add End Processing Time Column" sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_19">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dt_report.Columns.Add.ColumnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">End Processing Time</InArgument>
                    </Assign.Value>
                  </Assign>
                  <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Headers" sap:VirtualizedContainerService.HintSize="468.8,295.2" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Split(in_Config(&quot;SendReport&quot;)(&quot;headersReport&quot;).ToString,&quot;,&quot;)]">
                    <ui:ForEach.Body>
                      <ActivityAction x:TypeArguments="x:String">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="x:String" Name="Headers" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="467.2,164.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign - Headers" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_5">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[dt_report.Columns.Add.ColumnName]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Headers]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </ActivityAction>
                    </ui:ForEach.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:ForEach>
                  <Assign DisplayName="Assign - Add Processing Item Status Column" sap:VirtualizedContainerService.HintSize="468.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_20">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dt_report.Columns.Add.ColumnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Processing Item Status</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - Add Processing Item Remarks Column" sap:VirtualizedContainerService.HintSize="468.8,104.8" sap2010:WorkflowViewState.IdRef="Assign_21">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[dt_report.Columns.Add.ColumnName]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">Processing Item Remarks</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_reportSQL]" DisplayName="For Each Row - Report SQL" sap:VirtualizedContainerService.HintSize="540.8,1983.2" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="536,1801.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="dic_queueParameters" />
                          <Variable x:TypeArguments="x:String" Name="str_informationUnprocessedRecords" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - Queue Parameters" sap:VirtualizedContainerService.HintSize="502.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[dic_queueParameters]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)">[New Dictionary(Of String, Object)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign DisplayName="Assign - Records Information" sap:VirtualizedContainerService.HintSize="502.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_informationUnprocessedRecords]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[String.Empty]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Sequence sap:VirtualizedContainerService.HintSize="502.4,319.2" sap2010:WorkflowViewState.IdRef="Sequence_18">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_23">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Json_ParametersDic]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String" xml:space="preserve">[CurrentRow("ParametersDic").ToString.Replace("{", "{""").Replace("}", """}").Replace(":", """: """).Replace(", ", """, """).Replace(""" ", """").Replace("  ", " ")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:DeserializeJson x:TypeArguments="scg:Dictionary(x:String, x:Object)" JsonSample="{x:Null}" DisplayName="Deserialize JSON" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_2" JsonObject="[dic_queueParameters]" JsonString="[Json_ParametersDic]">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:DeserializeJson>
                        </Sequence>
                        <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Itera sobre todas las columnas del informe." DisplayName="For Each - Column" sap:VirtualizedContainerService.HintSize="502.4,839.2" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[dt_report.Columns]">
                          <ui:ForEach.Body>
                            <ActivityAction x:TypeArguments="sd:DataColumn">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="Columna" />
                              </ActivityAction.Argument>
                              <ui:ForEach x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" CurrentIndex="{x:Null}" sap2010:Annotation.AnnotationText="Itera sobre todos los parámetros de la cola para que coincidan con el 'nombre de columna' y el 'nombre de parámetro'" DisplayName="For Each - Queue Parameters" sap:VirtualizedContainerService.HintSize="476.8,607.2" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[dic_queueParameters]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="scg:KeyValuePair(x:String, x:Object)">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="scg:KeyValuePair(x:String, x:Object)" Name="queueParameters" />
                                    </ActivityAction.Argument>
                                    <If sap2010:Annotation.AnnotationText="- Si el campo cabecera de la  &#xA;  plantilla coincide con la Key &#xA;  del diccionario, iremos por &#xA;  la rama de la izquierda, sino, &#xA;  por la de la derecha" Condition="[Columna.ColumnName.Replace(&quot; &quot;,&quot;&quot;).ToLower.Trim=queueParameters.Key.Replace(&quot; &quot;,&quot;&quot;).ToLower.Trim]" DisplayName="If - Field Found" sap:VirtualizedContainerService.HintSize="451.2,393.6" sap2010:WorkflowViewState.IdRef="If_4">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign DisplayName="Assign - Record Information" sap:VirtualizedContainerService.HintSize="449.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[str_informationUnprocessedRecords]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[If(String.IsNullOrEmpty(str_informationUnprocessedRecords), queueParameters.Value.ToString, str_informationUnprocessedRecords+"$#$"+queueParameters.Value.ToString)]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="449.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                            </ActivityAction>
                          </ui:ForEach.Body>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:ForEach>
                        <Assign DisplayName="Assign - Record Information" sap:VirtualizedContainerService.HintSize="502.4,113.6" sap2010:WorkflowViewState.IdRef="Assign_9">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[str_informationUnprocessedRecords]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[Split(Split(CurrentRow("EndProcessingItemTime").ToString, " ")(0), "/")(1)+"/"+Split(Split(CurrentRow("EndProcessingItemTime").ToString, " ")(0), "/")(0)+"/"+Split(Split(CurrentRow("EndProcessingItemTime").ToString, " ")(0), "/")(2)+" "+Split(CurrentRow("EndProcessingItemTime").ToString, " ")(1)+"$#$"+str_informationUnprocessedRecords+"$#$"+CurrentRow("ProcessingItemStatus").ToString+"$#$"+CurrentRow("ProcessingItemRemarks").ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:AddDataRow DataRow="{x:Null}" sap2010:Annotation.AnnotationText="Agregar registro en la tabla de datos del informe" ArrayRow="[Split(str_informationUnprocessedRecords, &quot;$#$&quot;)]" DataTable="[dt_report]" DisplayName="Add Data Row" sap:VirtualizedContainerService.HintSize="502.4,242.4" sap2010:WorkflowViewState.IdRef="AddDataRow_1">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:AddDataRow>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
                <Assign sap:VirtualizedContainerService.HintSize="540.8,113.6" sap2010:WorkflowViewState.IdRef="Assign_25">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[rutaInforme]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[in_config("SendReport")("DirectorioArchivoMonitorizacion").ToString + Now.ToString("yyyyMMdd_HHmmss_") + in_config("SendReport")("NombreExcel").ToString + ".xlsx"]</InArgument>
                  </Assign.Value>
                </Assign>
                <ui:RetryScope LogRetriedExceptions="{x:Null}" RetriedExceptionsLogLevel="{x:Null}" sap2010:Annotation.AnnotationText="Exportar registros al archivo Excel" DisplayName="Retry Scope - Write Excel File" sap:VirtualizedContainerService.HintSize="540.8,424" sap2010:WorkflowViewState.IdRef="RetryScope_6" NumberOfRetries="3" RetryInterval="00:00:05">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <ui:WriteRange StartingCell="{x:Null}" WorkbookPathResource="{x:Null}" DataTable="[dt_report]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="334.4,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Hoja Reporte" WorkbookPath="[rutaInforme]" />
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RetryScope>
                <Sequence sap2010:Annotation.AnnotationText="- Assign variables to complete the body notification" DisplayName="Sequence - Assign Variables" sap:VirtualizedContainerService.HintSize="540.8,796" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Assign DisplayName="Assign - Success" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[int_success]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dt_reportSQL.Select("[ProcessingItemStatus]='Success'").Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - BusinessException" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[int_businessException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dt_reportSQL.Select("[ProcessingItemStatus]='BusinessException'").Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - SystemException" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_13">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">[int_systemException]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">[dt_reportSQL.Select("[ProcessingItemStatus]='SystemException'").Count]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - Success Rate" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_14">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_successRate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CStr(System.Math.Round((int_success/dt_reportSQL.RowCount)*100,2))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - BusinessException Rate" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_businessExceptionRate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CStr(System.Math.Round((int_businessException/dt_reportSQL.RowCount)*100,2))]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - SystemException Rate" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_16">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[str_systemExceptionRate]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[CStr(System.Math.Round((int_systemException/dt_reportSQL.RowCount)*100,2))]</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
                <ui:RetryScope LogRetriedExceptions="{x:Null}" RetriedExceptionsLogLevel="{x:Null}" sap2010:Annotation.AnnotationText="Send report file" DisplayName="Retry Scope - Send Mail" sap:VirtualizedContainerService.HintSize="540.8,768.8" sap2010:WorkflowViewState.IdRef="RetryScope_4" NumberOfRetries="3" RetryInterval="00:00:10">
                  <ui:RetryScope.ActivityBody>
                    <ActivityAction>
                      <uga:SendEmailConnections ArgumentAttachmentPaths="{x:Null}" AttachmentPaths="{x:Null}" Attachments="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" ConnectionAccountName="{x:Null}" ContinueOnError="{x:Null}" ReplyTo="{x:Null}" SingleAttachment="{x:Null}" TextBody="{x:Null}" AttachmentInputMode="Builder" AuthScopesInvalid="False" Body="[string.Format(&quot;&lt;P&gt;&lt;SPAN&gt;Se adjunta el reporte de la creaci&amp;#243;n de los contratos de los empleados.&lt;/SPAN&gt;&lt;/P&gt;&quot;)]" ConnectionId="e86ecfef-ed4e-4146-82d5-72df3bb603fa" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="334.4,460.8" sap2010:WorkflowViewState.IdRef="SendEmailConnections_1" Importance="Normal" InputType="HTML" SaveAsDraft="True" Subject="Reporte Creación Contratos Empleados" To="[in_config(&quot;SendReport&quot;)(&quot;mailTo&quot;).Split(&quot;,&quot;)]" UseConnectionService="True">
                        <uga:SendEmailConnections.ArgumentAttachments>
                          <scg:List x:TypeArguments="InArgument(upr:IResource)" Capacity="4">
                            <InArgument x:TypeArguments="upr:IResource">[LocalResource.FromPath(rutaInforme)]</InArgument>
                          </scg:List>
                        </uga:SendEmailConnections.ArgumentAttachments>
                        <uga:SendEmailConnections.AttachmentsBackup>
                          <usau:BackupSlot x:TypeArguments="ugage:AttachmentInputMode" StoredValue="Builder">
                            <usau:BackupSlot.BackupValues>
                              <scg:List x:TypeArguments="x:Object" x:Key="UseExisting" Capacity="1">
                                <InArgument x:TypeArguments="scg:IEnumerable(upr:IResource)" />
                              </scg:List>
                            </usau:BackupSlot.BackupValues>
                          </usau:BackupSlot>
                        </uga:SendEmailConnections.AttachmentsBackup>
                        <uga:SendEmailConnections.InputTypeBackup>
                          <usau:BackupSlot x:TypeArguments="ugage:BodyInputType" StoredValue="HTML">
                            <usau:BackupSlot.BackupValues>
                              <scg:Dictionary x:TypeArguments="ugage:BodyInputType, scg:List(x:Object)" />
                            </usau:BackupSlot.BackupValues>
                          </usau:BackupSlot>
                        </uga:SendEmailConnections.InputTypeBackup>
                      </uga:SendEmailConnections>
                    </ActivityAction>
                  </ui:RetryScope.ActivityBody>
                  <ui:RetryScope.Condition>
                    <ActivityFunc x:TypeArguments="x:Boolean" />
                  </ui:RetryScope.Condition>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:RetryScope>
                <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[dt_reportSQL]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="540.8,510.4" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
                  <ui:ForEachRow.Body>
                    <ActivityAction x:TypeArguments="sd:DataRow">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                      </ActivityAction.Argument>
                      <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="449.6,337.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="** IMPORTANT **&#xA;&#xA;If Config parameter 'monitorTransactionItems' is False, TransactionItems will not be updated in SQL&#xA;&#xA;Updates a record in SQL" DisplayName="Modules\UpdateRecord.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="416,277.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Modules\UpdateRecord.xaml">
                          <ui:InvokeWorkflowFile.Arguments>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, scg:Dictionary(x:String, x:String))" x:Key="in_config">[in_config]</InArgument>
                            <InArgument x:TypeArguments="x:String" x:Key="in_transactionItemReference">[CurrentRow("ItemReference").ToString]</InArgument>
                            <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_queueParameters" />
                            <InArgument x:TypeArguments="x:String" x:Key="in_processingTransactionItemStatus" />
                            <InArgument x:TypeArguments="x:String" x:Key="in_processingTransactionItemRemarks" />
                            <InArgument x:TypeArguments="x:Boolean" x:Key="in_bool_ExisteBD">[in_bool_ExisteBD]</InArgument>
                          </ui:InvokeWorkflowFile.Arguments>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:InvokeWorkflowFile>
                      </Sequence>
                    </ActivityAction>
                  </ui:ForEachRow.Body>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:ForEachRow>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="574.4,225.6" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message - End WorkFlow - Send Report" sap:VirtualizedContainerService.HintSize="540.8,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;El archivo de informe no se enviará porque no hay filas en SQL para informar&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="609.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message - End WorkFlow - Send Report" sap:VirtualizedContainerService.HintSize="611.2,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Finalizar WorkFlow 'Enviar informe'&quot;]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:LogMessage>
  </Sequence>
</Activity>